/* =====================================
   REVOLUTIONARY CLIP-PATH COLLECTION
   ===================================== */

/* ðŸš€ FUTURISTIC SHAPES FOR BUTTONS */

/* 1. CYBER CHEVRON - Current Implementation */
.cyber-chevron {
  clip-path: polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%);
}

/* 2. QUANTUM CRYSTAL */
.quantum-crystal {
  clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
}

/* 3. NEURAL NETWORK NODE */
.neural-node {
  clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
}

/* 4. PLASMA BLADE */
.plasma-blade {
  clip-path: polygon(0% 40%, 70% 40%, 70% 20%, 100% 30%, 100% 70%, 70% 80%, 70% 60%, 0% 60%);
}

/* 5. HOLOGRAPHIC PRISM */
.holo-prism {
  clip-path: polygon(25% 0%, 75% 0%, 100% 25%, 85% 50%, 100% 75%, 75% 100%, 25% 100%, 0% 75%, 15% 50%, 0% 25%);
}

/* 6. ENERGY CONDUIT */
.energy-conduit {
  clip-path: polygon(20% 0%, 80% 0%, 95% 15%, 95% 35%, 100% 50%, 95% 65%, 95% 85%, 80% 100%, 20% 100%, 5% 85%, 5% 65%, 0% 50%, 5% 35%, 5% 15%);
}

/* 7. FRACTAL EDGE */
.fractal-edge {
  clip-path: polygon(0% 25%, 25% 25%, 25% 0%, 50% 0%, 50% 25%, 75% 25%, 75% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 100%, 50% 75%, 25% 75%, 25% 100%, 0% 100%);
}

/* 8. WARP GATE */
.warp-gate {
  clip-path: circle(50% at 50% 50%);
  /* Combined with mask for inner ring */
  -webkit-mask: radial-gradient(circle, transparent 35%, black 40%, black 60%, transparent 65%);
  mask: radial-gradient(circle, transparent 35%, black 40%, black 60%, transparent 65%);
}

/* 9. STEALTH FIGHTER */
.stealth-fighter {
  clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 68% 85%, 32% 85%, 18% 100%, 0% 38%);
}

/* 10. MATRIX KEYHOLE */
.matrix-keyhole {
  clip-path: path('M20,0 L80,0 Q100,0 100,20 L100,30 Q100,50 80,50 L75,50 Q75,60 70,65 L65,70 Q60,75 50,75 Q40,75 35,70 L30,65 Q25,60 25,50 L20,50 Q0,50 0,30 L0,20 Q0,0 20,0 Z');
}

/* ðŸŽ¨ HOVER TRANSFORMATIONS */

/* EXPANSION EFFECTS */
.expand-burst:hover {
  clip-path: polygon(0% 15%, 70% 15%, 70% 0%, 100% 25%, 85% 50%, 100% 75%, 70% 100%, 70% 85%, 0% 85%);
}

.expand-crystal:hover {
  clip-path: polygon(50% -10%, 100% 10%, 110% 70%, 75% 110%, 25% 110%, -10% 70%, 0% 10%);
}

.expand-wings:hover {
  clip-path: polygon(20% 0%, 80% 0%, 120% 30%, 120% 70%, 80% 100%, 20% 100%, -20% 70%, -20% 30%);
}

/* MORPHING EFFECTS */
.morph-to-star:hover {
  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
}

.morph-to-arrow:hover {
  clip-path: polygon(0% 20%, 75% 20%, 75% 0%, 100% 50%, 75% 100%, 75% 80%, 0% 80%);
}

/* ðŸŒŸ ADVANCED COMBINATIONS */

/* Triple-layer system example */
.tri-layer-button {
  /* Outer: Energy aura */
  position: relative;
}

.tri-layer-button::before {
  /* Middle: Power core */
  clip-path: polygon(15% 5%, 85% 5%, 95% 25%, 95% 75%, 85% 95%, 15% 95%, 5% 75%, 5% 25%);
}

.tri-layer-button::after {
  /* Inner: Activation zone */
  clip-path: polygon(25% 15%, 75% 15%, 85% 35%, 85% 65%, 75% 85%, 25% 85%, 15% 65%, 15% 35%);
}

/* =====================================
   USAGE INSTRUCTIONS
   ===================================== */

/*
To implement any of these shapes:

1. Replace the current clip-path value in your button CSS
2. For hover effects, add the hover variant
3. For complex shapes, you may need to adjust padding/sizing
4. Test across different screen sizes for responsiveness
5. Consider animation timing for smooth transitions

Example implementation:
li button {
  clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
}

li button:hover {
  clip-path: polygon(50% -10%, 100% 10%, 110% 70%, 75% 110%, 25% 110%, -10% 70%, 0% 10%);
}
*/